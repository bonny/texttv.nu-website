# This is a basic workflow to help you get started with Actions

name: Deploy website

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
    paths:
      - "texttv.nu/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        server:
          - name: "current-server"
            host_secret: "HOST"
            username_secret: "USERNAME"
            key_secret: "KEY"
          - name: "hetzner-server"
            host_secret: "HETZNER_HOST"
            username_secret: "HETZNER_USERNAME"
            key_secret: "HETZNER_KEY"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          extensions: mbstring, intl
          ini-values: post_max_size=256M, max_execution_time=180
          tools: php-cs-fixer, phpunit

      - name: Copy files to ${{ matrix.server.name }}
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets[matrix.server.host_secret] }}
          username: ${{ secrets[matrix.server.username_secret] }}
          key: ${{ secrets[matrix.server.key_secret] }}
          source: "texttv.nu/"
          target: "/usr/share/nginx/"

      - name: Execute remote commands on ${{ matrix.server.name }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[matrix.server.host_secret] }}
          username: ${{ secrets[matrix.server.username_secret] }}
          key: ${{ secrets[matrix.server.key_secret] }}
          script: |
            cd /usr/share/nginx/texttv.nu
            sudo chown -R root:root .
            chmod 777 -R /usr/share/nginx/texttv.nu/shares
            chmod 777 /usr/share/nginx/texttv.nu/codeigniter/application/cache/
